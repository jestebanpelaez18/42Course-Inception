#In our case we need to run diferent microservices in differents containers, so for that we are gonna use 
# docker compose which allow to communicatte all the containers in a single call

version: '3' #version of the dodcker compose

# A Docker volume allows data to persist, even when a container is deleted. 
# Volumes are also a convenient way to share data between the host and the container. Docker Volumes are good
# if you want push data to a Docker Container or if you want to pull the Data for a Docker container and also if you
# want to share data between Docker container, which its what we want to do 
volumes:
  wordpressdb:
    name: wordpressdb
    driver: local
    driver_opts:
      type: none
      device: /home/jpelaez-/data/wordpress
      o: bind
  
  mariadb:
    name: mariadb
    driver: local #store the volume on the host file sistem
    driver_opts: #driver options
      type: none  #no specific device type is being used
      device: /home/jpelaez-/data/mariadb # specifies the path on the host filesystem where the volume data should be stored.
      o: bind #The bind option is used to mount a host directory into the container. This is useful for volumes that need to be accessible from the host or other containers.


#docker volume ls: list volumes


#custom networks to facilitate communication between the containers
networks:
  inception_network:
    name: inception_network

# this reprensent all the configuration of one of the containers, in our docker compose. Here we define ports, networks, dockerfile 
#location etc... We must to be carefull with the indentation, is very important here.

services: #this tell docker how to build the image of the container
  mariadb:  #name of the image project, basically the folder nane of the container.
    build:  #build option say how to buidl the image
      context: ./src/mariadb/ #We say where to find the Dockerfile
      dockerfile : Dockerfile #name of the dockerfile
    image: mariadb:jpelaez-
    container_name: mariadb #container name 
    networks:
      - inception_network  #network that we are using for our program
    env_file: .env
    volumes:
       - /home/jpelaez-/data/mariadb:/var/lib/mysql #volume use for mariadb, this is where we are gonna create the volume that maps mariadb
    restart: always

  nginx:
    build:
      context: ./src/nginx/
      dockerfile : Dockerfile
    image: nginx:jpelaez-
    container_name: nginx
    ports:
      - "443:443"
    networks:
      - inception_network
    depends_on:
      - wordpress
    volumes:
      - wordpressdb:/var/lib/mysql
    restart: always

  wordpress:
    build:
      context: ./src/wordpress/
      dockerfile : Dockerfile
    image: wordpress:jpelaez-
    container_name: wordpress
    networks:
      - inception_network
    depends_on:   #This option ensures that your containers will start in order of dependency, with the wordpress container starting after the db container.
       - mariadb
    env_file: .env
    volumes:
     - wordpressdb:/var/www/html/
    restart: always
